---
openapi: 3.0.3
info:
  title: ramen-ai-backend
  version: 1.0.0
servers: []
paths:
  "/api/v1/random_menus":
    get:
      summary: index
      tags:
      - Api::V1::RandomMenu
      responses:
        '200':
          description: returns all menus
          content:
            application/json:
              schema:
                type: object
                properties:
                  menus:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        genre_name:
                          type: string
                        noodle_name:
                          type: string
                        soup_name:
                          type: string
                        image_url:
                          nullable: true
                        shop:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                          required:
                          - id
                          - name
                      required:
                      - id
                      - name
                      - genre_name
                      - noodle_name
                      - soup_name
                      - image_url
                      - shop
                required:
                - menus
              example:
                menus:
                - id: 153
                  name: 博多ラーメン
                  genre_name: ラーメン
                  noodle_name: 細麺
                  soup_name: 豚骨スープ
                  image_url:
                  shop:
                    id: 448
                    name: 博多ラーメン店
  "/api/v1/recommended_menus":
    post:
      summary: create
      tags:
      - Api::V1::RecommendedMenu
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                select_menu_ids:
                  type: array
                  items:
                    type: string
                not_select_menu_ids:
                  type: array
                  items:
                    type: string
              required:
              - select_menu_ids
            example:
              select_menu_ids:
              - '1'
              - '2'
              not_select_menu_ids:
              - '3'
              - '4'
      responses:
        '200':
          description: returns a recommended menu based on select_menu_ids & not_select_menu_ids
          content:
            application/json:
              schema:
                type: object
                properties:
                  recommended_menu:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      genre_name:
                        type: string
                      noodle_name:
                        type: string
                      soup_name:
                        type: string
                      image_url:
                        nullable: true
                      shop:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                        required:
                        - id
                        - name
                    required:
                    - id
                    - name
                    - genre_name
                    - noodle_name
                    - soup_name
                    - image_url
                    - shop
                  reason:
                    type: string
                required:
                - recommended_menu
                - reason
              example:
                recommended_menu:
                  id: 155
                  name: Ramen 5
                  genre_name: ラーメン
                  noodle_name: 太麺
                  soup_name: 豚骨
                  image_url:
                  shop:
                    id: 450
                    name: ラーメン屋
                reason: 魚介つけ麺や二郎系ラーメンなど、濃厚でインパクトのある味をお好みのようですので、同じく濃厚な「豚骨」スープのラーメンをおすすめします。特に食べ応えのある太麺との相性は抜群で、鶏ガラとはまた違ったクリーミーで深みのある味わいをお楽しみいただけます。
        '400':
          description: returns an error if select_menu_ids is missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: select_menu_idsが必要です
  "/api/v1/shops":
    get:
      summary: index
      tags:
      - Api::V1::Shop
      responses:
        '200':
          description: returns all shops
          content:
            application/json:
              schema:
                type: object
                properties:
                  shops:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                      required:
                      - id
                      - name
                required:
                - shops
              example:
                shops:
                - id: 452
                  name: Shop Name
    post:
      summary: create
      tags:
      - Api::V1::Shop
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                shop:
                  type: object
                  properties:
                    name:
                      type: string
                  required:
                  - name
              required:
              - shop
            example:
              shop:
                name: New Shop
      responses:
        '201':
          description: creates a new shop
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                required:
                - id
                - name
              example:
                id: 455
                name: New Shop
        '422':
          description: returns an error when name is missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: array
                    items:
                      type: string
                required:
                - name
              example:
                name:
                - can't be blank
  "/api/v1/shops/{id}":
    delete:
      summary: destroy
      tags:
      - Api::V1::Shop
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 9999
      responses:
        '204':
          description: deletes a shop
        '404':
          description: returns 404 if shop does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Couldn't find Shop with 'id'=9999
    get:
      summary: show
      tags:
      - Api::V1::Shop
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 453
      responses:
        '200':
          description: returns a specific shop
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                required:
                - id
                - name
              example:
                id: 453
                name: Shop Name
    patch:
      summary: update
      tags:
      - Api::V1::Shop
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 458
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                shop:
                  type: object
                  properties:
                    name:
                      type: string
                  required:
                  - name
              required:
              - shop
            example:
              shop:
                name: Updated Shop Name
      responses:
        '200':
          description: updates an existing shop
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                required:
                - id
                - name
              example:
                id: 457
                name: Updated Shop Name
        '422':
          description: returns an error when name is missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: array
                    items:
                      type: string
                required:
                - name
              example:
                name:
                - can't be blank
